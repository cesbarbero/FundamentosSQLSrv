USE DB_Educacion_IT
GO
--MODIFICO EL TIPO DE DATO DE LA COLUMNA PRECIO, PARA QUE ACEPTE NULOS
ALTER TABLE TMP_PRODUCTO ALTER COLUMN precio NUMERIC(9,2) NULL

--AGREGO ALGUNOS REGISTROS CON PRECIO NULL
IF NOT EXISTS
(
	SELECT TOP 1 1 FROM TMP_PRODUCTO WHERE precio IS NULL
)
BEGIN
	INSERT INTO TMP_PRODUCTO (descripcion, precio)
	VALUES('Pollera Jean', NULL), ('Buzo Escolar', NULL)
END

IF NOT EXISTS
(
	SELECT TOP 1 1 FROM TMP_PRODUCTO WHERE descripcion in('Camisa Rustica', 'Pantalon Rustico')
)
BEGIN
	INSERT INTO TMP_PRODUCTO (descripcion, precio)
	VALUES('Camisa Rustica', 6672), ('Pantalon Rustico', 9460)
END

--1)AVG: Calcula el promedio, pero no tiene en cuenta los precios NULL
SELECT PROMEDIO = AVG(precio), PROMEDIO_SIN_DUPLICADOS = AVG(DISTINCT precio)
FROM TMP_PRODUCTO

--2) OBSERVAR QUE LLEGO AL MISMO RESULTADO QUE AVG(precio) USANDO SUM(precio) / COUNT(precio
--SUM: SUMA LOS PRECIOS, PERO NO TIENE EN CUENTA LOS NULL
--SUM(DISTINCT): SUMA LOS PRECIOS QUE NO ESTAN DUPLICADOS (SIN CONSIDERAR LOS NULOS)

--COUNT: CUENTA LA CANTIDAD DE REGISTROS QUE TIENEN PRECIO (SIN CONSIDERAR LOS NULOS). EL TIPO DE DATO RETORNADO SIEMPRE ES UN INT
--COUNT(DISTINCT): CUENTA LA CANTIDAD DE REGISTROS QUE TIENEN PRECIOS NO REPETIDOS (SIN CONSIDERAR LOS NULOS). EL TIPO DE DATO RETORNADO SIEMPRE ES UN INT
select PROMEDIO = SUM(precio)/count(precio), PROMEDIO_SIN_DUPLICADOS = SUM(DISTINCT precio)/count(DISTINCT precio)
FROM TMP_PRODUCTO

--3) MIN: DEVUELVE EL VALOR MINIMO (SIN CONSIDERAR NULL)
select PRECIO_MINIMO = MIN(PRECIO) 
FROM TMP_PRODUCTO

--4) MAX: DEVUELVE EL VALOR MAXIMO (SIN CONSIDERAR NULL)
select PRECIO_MINIMO = MAX(PRECIO) 
FROM TMP_PRODUCTO

--5) COUNT_BIG: CUENTA LA CANTIDAD DE REGISTROS QUE TIENEN PRECIO (SIN CONSIDERAR LOS NULOS), PERO EL TIPO DE DATO QUE RETORNA ES BIGINT
select PRECIO_MINIMO = COUNT_BIG(PRECIO) 
FROM TMP_PRODUCTO
