/*
--***********************************************************
--                  TIPOS DE TABLAS
--***********************************************************
*/

--1)*************** TABLA: TEMPORAL LOCAL**************************

--REALIZAR LOS SIGUIENTES PASOS:
--A) ABRIR DOS VENTANAS EN SQL SERVER

--B) EN LA PRIMER VENTANA CREAR LA TABLA LOCAL
USE DB_Educacion_IT
go
IF OBJECT_ID('tempdb..#TMP_TABLA_LOCAL') IS NOT NULL
    DROP TABLE #TMP_TABLA_LOCAL

CREATE TABLE #TMP_TABLA_LOCAL
(
    id INT NOT NULL IDENTITY(1,1),
    descripcion VARCHAR(50) NOT NULL
)

INSERT INTO #TMP_TABLA_LOCAL (descripcion) values ('prueba 1')

SELECT * FROM #TMP_TABLA_LOCAL

--C) OBSERVAR QUE SI INTENTEMOS ACCEDER A LA TABLA CREADA, DESDE LA SEGUNDA VENTANA, NO PODREMOS
USE DB_Educacion_IT
go
SELECT * FROM #TMP_TABLA_LOCAL

--D) MOSTRAR COMO LA TABLA APARECE EN LA BASE TEMPDB/TEMPORARY_TABLES Y COMO AL CERRAR LA VENTANA QUE CREO LA TABLA (paso b), ESTA DESAPARECE



--2)*************** TABLA: TEMPORAL GLOBAL**************************
--REALIZAR LOS SIGUIENTES PASOS:
--A) ABRIR DOS VENTANAS EN SQL SERVER
 
--B) EN LA PRIMER VENTANA CREAR LA TABLA GLOBAL
USE DB_Educacion_IT
go
IF OBJECT_ID('tempdb..##TMP_TABLA_GLOBAL') IS NOT NULL
    DROP TABLE ##TMP_TABLA_GLOBAL
 
CREATE TABLE ##TMP_TABLA_GLOBAL
(
    id INT NOT NULL IDENTITY(1,1),
    descripcion VARCHAR(50) NOT NULL
)
 
INSERT INTO ##TMP_TABLA_GLOBAL (descripcion) values ('prueba 2')
 
SELECT * FROM ##TMP_TABLA_GLOBAL
 
--C) OBSERVAR QUE SI INTENTEMOS ACCEDER A LA TABLA CREADA, DESDE LA SEGUNDA VENTANA, AHORA PODREMOS
USE DB_Educacion_IT
go
SELECT * FROM ##TMP_TABLA_GLOBAL
UPDATE ##TMP_TABLA_GLOBAL SET descripcion = 'prueba 2 modificada'
SELECT * FROM ##TMP_TABLA_GLOBAL
 
--D) MOSTRAR COMO LA TABLA APARECE EN LA BASE TEMPDB/TEMPORARY_TABLES Y COMO SOLO DESAPARECE LA TABLA CUANDO CERRAMOS LA VENTANA QUE LA CREO O REALIZAMOS UN DROP TABLE



--3)*************** TABLA: VARIABLE DE TIPO TABLA**************************
--REALIZAR LOS SIGUIENTES PASOS:
--A) ABRIR DOS VENTANAS EN SQL SERVER

--B) EN LA PRIMER VENTANA CREAR LA VARIABLE DE TIPO TABLA
USE DB_Educacion_IT
go    
DECLARE @TMP_VARIABLE_TABLA TABLE
(
id INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
[descripcion] VARCHAR(50) NOT NULL
)

INSERT INTO @TMP_VARIABLE_TABLA ([descripcion]) VALUES ('Prueba 3')
--OBSERVAR QUE SI EJECUTAMOS EL SELECT SOLO, NOS DARA ERROR YA QUE LA TABLA SOLO EXISTE SI EJECUTAMOS TODO EL SCRIPT
SELECT * FROM @TMP_VARIABLE_TABLA

--C) OBSERVAR QUE SI INTENTEMOS ACCEDER A LA TABLA CREADA, DESDE LA SEGUNDA VENTANA, NO PODREMOS
USE DB_Educacion_IT
go    
SELECT * FROM @TMP_VARIABLE_TABLA




--4)*************** TABLA: TABLA FISICA**************************
--REALIZAR LOS SIGUIENTES PASOS:
--A) ABRIR DOS VENTANAS EN SQL SERVER

--B) EN LA PRIMER VENTANA CREAR LA TABLA FISICA
USE DB_Educacion_IT
go 
IF NOT EXISTS
(
    SELECT TOP 1 1 FROM sys.tables WHERE name = 'TMP_TABLA_FISICA'
)
BEGIN
    CREATE TABLE dbo.TMP_TABLA_FISICA
    (
        id INT NOT NULL IDENTITY(1,1),
        descripcion VARCHAR(50)
    )
END
SELECT * FROM dbo.TMP_TABLA_FISICA

--C) OBSERVAR QUE SI INTENTEMOS ACCEDER A LA TABLA CREADA, DESDE LA SEGUNDA VENTANA, AHORA PODREMOS
 USE DB_Educacion_IT
go 
SELECT * FROM dbo.TMP_TABLA_FISICA

--d) SI CERRAMOS LAS DOS VENTANAS, OBSERVAREMOS QUE LA TABLA CONTINÃšA EXISTIENDO EN LA BASE DB_Epicharla_SQL_Server

